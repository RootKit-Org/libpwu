.IX Title "UTIL 3
.TH UTIL 3 "Oct 2024" "liblain v1.0.3" "util"
.\" Automatically generated by Pandoc 3.1.11.1
.\"
.SS LIBRARY
Lain memory manipulation library (liblain, \-llain)
.SS SYNOPSIS
.IP
.EX
const char * ln_pathname_to_basename(const char * pathname);
pid_t ln_pid_by_name(const char * basename, cm_vector * pid_vector);
int ln_name_by_pid(const pid_t pid, char * name_buf);
void ln_bytes_to_hex(const cm_byte * inp, const int inp_len, char * out);
.EE
.SS STRUCTURE
\f[B]liblain\f[R] provides some utility functions.
.SS FUNCTIONS
The \f[B]ln_pathname_to_basename()\f[R] function returns a pointer to
the basename component of the provided \f[I]pathname\f[R].
.PP
The \f[B]ln_pid_by_name()\f[R] function returns an allocated vector
\f[I]pid_vector\f[R] of process IDs with a name matching
\f[I]basename\f[R].
On success, \f[I]pid_vector\f[R] must be manually deallocated with
\f[B]cm_del_vector()\f[R].
See \f[B]libcmore_vector\f[R](3).
.PP
The \f[B]ln_name_by_pid()\f[R] function stores the basename (comm)
inside \f[I]name_buf\f[R].
The name is fetched from \f[I]/proc//status\f[R] to mimic behaviour of
utilities like \f[I]top\f[R] and \f[I]ps\f[R].
.PP
The \f[B]ln_bytes_to_hex()\f[R] function converts a binary buffer
\f[I]inp\f[R] into its hexadecimal string representation, prefixed by
`0x' and stored in the \f[I]out\f[R] buffer.
Note that the length of \f[I]out\f[R] must be \f[I]inp_len\f[R] * 2 + 2.
.SS RETURN VALUES
\f[B]ln_pathname_to_basename()\f[R] returns a pointer to the basename on
success, and NULL on error.
.PP
\f[B]ln_pid_by_name()\f[R] returns the first pid in \f[I]pid_vector\f[R]
on success, and \-1 on error.
.PP
\f[B]ln_name_by_pid()\f[R] returns 0 on success, and \-1 on error.
.PP
On error, \f[I]ln_errno\f[R] is set.
See \f[B]liblain_error\f[R](3).
.SS EXAMPLES
See \f[I]src/test/util.c\f[R] for examples.
.SS SEE ALSO
\f[B]liblain_error\f[R](3), \f[B]liblain_iface\f[R](3),
\f[B]liblain_map\f[R](3)
